/*Honor Code:

This is my own work and I have not received any unauthorized help in completing this.
I have not copied from my classmate, friend, nor any unauthorized resource.
I am well aware of the policies stipulated in the handbook regarding academic dishonesty. 
If proven guilty, I won't be credited any points for this endeavor.

 */
package ProjectA;

import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HERMI DE VILLA
 */

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    public static Frame a;
    public static String username;
    
    public MainFrame() {
        initComponents();
      
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        choose_Panel = new javax.swing.JPanel();
        score_Panel = new javax.swing.JPanel();
        Start_btn2 = new javax.swing.JButton();
        kaguya_button = new javax.swing.JButton();
        chika_button = new javax.swing.JButton();
        ishigami_button = new javax.swing.JButton();
        miyuki_button = new javax.swing.JButton();
        start_game_btn = new javax.swing.JButton();
        choose_img = new javax.swing.JLabel();
        hs_img = new javax.swing.JLabel();
        htp_btn = new javax.swing.JButton();
        hs_btn1 = new javax.swing.JButton();
        score_editBtn = new javax.swing.JButton();
        score_saveBtn = new javax.swing.JButton();
        exit_btn = new javax.swing.JButton();
        score_delete_Btn = new javax.swing.JButton();
        score_back = new javax.swing.JButton();
        panel_back = new javax.swing.JButton();
        BackgroundMain = new javax.swing.JLabel();
        user_txt = new javax.swing.JTextField();
        user_textField = new javax.swing.JTextField();
        score_textField = new javax.swing.JTextField();

        
        choose_Panel.setBounds(0 , 0 , 995 , 610);
        choose_Panel.setLayout(null);
        
        
        score_Panel.setBounds(0 , 0 , 995 , 610);
        score_Panel.setLayout(null);
        
        
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
               "User_no" , "Username", "Score" , "Character"
            }
        ){
            boolean[] canEdit = new boolean [] {
               false , false, false , false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(3).setMinWidth(0);
        jTable2.getColumnModel().getColumn(3).setMaxWidth(0);
        
        
        ImageIcon icon_hs = new ImageIcon(new ImageIcon(getClass().getResource("/1580441.png")).getImage().getScaledInstance(310, 260, Image.SCALE_DEFAULT));
        hs_img.setIcon(icon_hs); // NOI18N
        score_Panel.add(hs_img);
        hs_img.setBounds(100, 90, 310, 260);
        
        
        score_Panel.add(score_textField);
        score_textField.setEditable(false);
        score_textField.setBounds(260, 380, 150, 40);

        score_Panel.add(user_textField);
        user_textField.setEditable(false);
        user_textField.setBounds(100, 380, 150, 40);
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Love is War");
        setMaximumSize(new java.awt.Dimension(995, 610));
        setMinimumSize(new java.awt.Dimension(995, 610));
        setResizable(false);
        setLocationRelativeTo(null);
        getContentPane().setLayout(null);
        
        
        user_txt.setText(user_placeholder);
        user_txt.setForeground(Color.gray);
        user_txt.setBounds(120, 100, 140, 40);
        user_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                user_txtFocusGained(evt);
            }
        });
        
        
        user_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                user_txtFocusLost(evt);
            }
        });
        
        getContentPane().add(user_txt);
        
        
        
        score_editBtn.setText("Edit");
        score_editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_editBtnActionPerformed(evt);
            }
        });
        
        score_Panel.add(score_editBtn);
        score_editBtn.setBounds(170, 450, 150, 40);
        
                
        score_saveBtn.setText("Save");
        score_saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_saveBtnActionPerformed(evt);
            }
        });
        
        
        score_delete_Btn.setText("Delete");
        score_Panel.add(score_saveBtn);
        score_saveBtn.setBounds(170, 450, 150, 40);
        score_saveBtn.setVisible(false);
        
        
        score_Panel.add(score_delete_Btn);
        score_delete_Btn.setBounds(170, 500, 150, 40);
        score_delete_Btn.setVisible(true);
        score_delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_delete_BtnActionPerformed(evt);
            }
        });
        
        start_game_btn.setText("Start");
        start_game_btn.setEnabled(false);
        choose_Panel.add(start_game_btn);
        start_game_btn.setBounds(770, 490, 180, 40); 
        start_game_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_game_btnActionPerformed(evt);
            }
        }); 
        
        kaguya_button.setText("Shinomiya Kaguya");
        choose_Panel.add(kaguya_button);
        kaguya_button.setBounds(120, 130, 180, 40);  
        kaguya_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaguya_buttonActionPerformed(evt);
            }
        });
        
        chika_button.setText("Fujiwara Chika");
        choose_Panel.add(chika_button);
        chika_button.setBounds(120, 200, 180, 40);  
        chika_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_buttonActionPerformed(evt);
            }
        });
        
        ishigami_button.setText("Yuu Ishigami");
        choose_Panel.add(ishigami_button);
        ishigami_button.setBounds(120, 270, 180, 40); 
        ishigami_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ishigami_buttonActionPerformed(evt);
            }
        });
        
        miyuki_button.setText("Miyuki Shirogane");
        choose_Panel.add(miyuki_button);
        miyuki_button.setBounds(120, 340, 180, 40); 
        miyuki_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miyuki_buttonActionPerformed(evt);
            }
        });


        Start_btn2.setText("Start");
        getContentPane().add(Start_btn2);
        Start_btn2.setBounds(120, 190, 140, 40);
        Start_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start_btn2ActionPerformed(evt);
            }
        });
        
        
        score_back.setText("Back");
        score_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_backActionPerformed(evt);
            }
        });
        score_Panel.add(score_back);
        score_back.setBounds(10, 10, 80, 40);
        
        
        panel_back.setText("Back");
        panel_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panel_backActionPerformed(evt);
            }
        });
        choose_Panel.add( panel_back);
        panel_back.setBounds(10, 10, 80, 40);


        htp_btn.setText("How to Play");
        getContentPane().add(htp_btn);
        htp_btn.setBounds(120, 250, 140, 40);

        hs_btn1.setText("High Score");
        getContentPane().add(hs_btn1);
        hs_btn1.setBounds(120, 310, 140, 40);
        hs_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hs_btn1ActionPerformed(evt);
            }
        });
        

        exit_btn.setText("Exit");
        exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btnActionPerformed(evt);
            }
        });
        
        
        getContentPane().add(exit_btn);
        getContentPane().setFocusable(true);
        
        
        exit_btn.setBounds(120, 370, 140, 40);

        BackgroundMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1580441.png"))); // NOI18N
        BackgroundMain.setText("jLabel1");
        getContentPane().add(BackgroundMain);
        BackgroundMain.setBounds(0, 0, 995, 610);
        
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/shinomiya_img.jpg")).getImage().getScaledInstance(995, 610, Image.SCALE_DEFAULT));
        choose_img.setIcon(imageIcon); // NOI18N
        choose_Panel.add(choose_img);
        choose_img.setBounds(0, 0, 995, 610);
        
        jScrollPane2.setViewportView(jTable2);
        score_Panel.add(jScrollPane2);
        jScrollPane2.setBounds(470, 90, 452, 402);
        
        getContentPane().add(choose_Panel);
        getContentPane().add(score_Panel);
        choose_Panel.hide();
        score_Panel.hide();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public ArrayList<Score_sheet> score_sheet(){
            ArrayList<Score_sheet> score_sheetlist = new ArrayList<Score_sheet>();
            
             try{  
                //step1 load the driver class  
                Class.forName("oracle.jdbc.driver.OracleDriver");  

                //step2 create  the connection object  
                Connection con=DriverManager.getConnection(  
                "jdbc:oracle:thin:@localhost:1521:xe","Hermi","root");  

                //step3 create the statement object  
                Statement stmt=con.createStatement();  
                //step4 execute query  
                
                Score_sheet data;
                
                ResultSet rs = stmt.executeQuery("select * from SCORE_SHEET order by score desc");  
                while(rs.next())  {
                    data = new Score_sheet(rs.getInt("User_no") ,rs.getString("Username") , rs.getInt("score") , rs.getString("Char_use"));
                    score_sheetlist.add(data);
                }
                //step5 close the connection object  
                con.close();  

            }catch(Exception e){ System.out.println(e);}  
             
            return score_sheetlist;
    }
    
    public void showData_Sheet(){
        
        ArrayList<Score_sheet> list = score_sheet();
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        
        Object[] row = new Object[4];
        
        System.out.println(row.length);
        
        for (int i = 0 ; i < list.size() ; i++){
            row[0] = list.get(i).getUser_No();
            row[1] = list.get(i).getUsername();
            row[2] = list.get(i).getScore();
            row[3] = list.get(i).getCh();
            model.addRow(row);
        }
        
    }
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        
        int i = jTable2.getSelectedRow();
        TableModel model = jTable2.getModel();
        user_textField.setText(model.getValueAt(i , 1).toString());
        score_textField.setText(model.getValueAt(i , 2).toString());
        user_no_temp = model.getValueAt(i, 0).toString();
        
        if((model.getValueAt(i, 3).toString()).equals("chika")){
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/choose_img.png")).getImage().getScaledInstance(310, 260, Image.SCALE_DEFAULT));
            hs_img.setIcon(imageIcon); // NOI18N
        }else if((model.getValueAt(i, 3).toString()).equals("shi")){
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/shinomiya_img.jpg")).getImage().getScaledInstance(310, 260, Image.SCALE_DEFAULT));
            hs_img.setIcon(imageIcon); // NOI18N
        }else if((model.getValueAt(i, 3).toString()).equals("ish")){
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/ishigami_back.jpg")).getImage().getScaledInstance(310, 260, Image.SCALE_DEFAULT));
            hs_img.setIcon(imageIcon); // NOI18N
        }else{
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/miyuki_img.jpg")).getImage().getScaledInstance(310, 260, Image.SCALE_DEFAULT));
            hs_img.setIcon(imageIcon); // NOI18N
            
        }
            
    }      
    
      private void score_editBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        
            
        if(score_textField.getText().isBlank() && user_textField.getText().isBlank())
            JOptionPane.showMessageDialog(null, "No Data to be Edit");
        else{  
            
            JPasswordField pwd = new JPasswordField(10);
        
            int action = JOptionPane.showConfirmDialog(null, pwd,"Enter Password",JOptionPane.OK_CANCEL_OPTION);
            
            
            if(action == 0){
                
                
                jTable2.disable();
                
                if(new String(pwd.getPassword()).equals("root")){
                JOptionPane.showMessageDialog(null,"Correct Password gain Access to the database");  
                user_textField.setEditable(true);
                score_saveBtn.setVisible(true);   
                score_editBtn.setVisible(false); 
                score_delete_Btn.setEnabled(false);
             }else 
                 JOptionPane.showMessageDialog(null,"Incorrect Password ");
                
                
            }
            
              
        }
   
    }   
      
    private void user_txtFocusGained(java.awt.event.FocusEvent evt){
        if(user_txt.getText().equals("Username"))
            user_txt.setText("");
        
        
        user_placeholder = "";
        user_txt.setForeground(Color.black);
        
    }
    
    
    private void score_backActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        score_Panel.setVisible(false);
        user_txt.setVisible(true);
        Start_btn2.setVisible(true);
        exit_btn.setVisible(true);
        hs_btn1.setVisible(true);
        htp_btn.setVisible(true);
        BackgroundMain.setVisible(true);
        
        
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
    }   
    
    
    private void panel_backActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        choose_Panel.setVisible(false);
        user_txt.setVisible(true);
        Start_btn2.setVisible(true);
        exit_btn.setVisible(true);
        hs_btn1.setVisible(true);
        htp_btn.setVisible(true);
        BackgroundMain.setVisible(true);
    }   
    
      
    private void user_txtFocusLost(java.awt.event.FocusEvent evt){
        if(user_txt.getText().equals("")){
            
             user_placeholder = "Username";
             user_txt.setText("Username");
             user_txt.setForeground(Color.gray);
        }
        
        
       
        
    }

    private void score_delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        
            
        if(score_textField.getText().isBlank() && user_textField.getText().isBlank())
            JOptionPane.showMessageDialog(null, "No Data to be Deleted");
        else{  
            
            JPasswordField pwd = new JPasswordField(10);
        
            //int action = JOptionPane.showConfirmDialog(null, pwd,"Enter Password",JOptionPane.OK_CANCEL_OPTION);
            
            
           // if(action == 0){
//                
//                if(new String(pwd.getPassword()).equals("root")){
//                JOptionPane.showMessageDialog(null,"Data Deleted from the database"); 
//

                try{  
                    //step1 load the driver class  
                    Class.forName("oracle.jdbc.driver.OracleDriver");  
                    //step2 create  the connection object  
                    Connection con=DriverManager.getConnection(  
                    "jdbc:oracle:thin:@localhost:1521:xe","Hermi","root"); 
                    //step3 create the statement object  
                    Statement stmt=con.createStatement();  
                    //step4 execute query  

                    stmt.executeQuery("delete from score_sheet WHERE user_no = "+ user_no_temp +" ");  

                    con.close();  

                }catch(Exception e){ System.out.println(e);}  


                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                model.setRowCount(0);

                showData_Sheet();
                
                score_textField.setText("");
                user_textField.setText("");
            
//             }else 
//                 JOptionPane.showMessageDialog(null,"Incorrect Password ");
//                
                
           // }
            
              
        }
   
    }   
    
    private void score_saveBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if(user_textField.getText().isBlank())
            JOptionPane.showMessageDialog(null, "Must not be empty");
        else{  
            score_editBtn.setVisible(true);
            score_saveBtn.setVisible(false);
            user_textField.setEditable(false);
            jTable2.enable();
            try{  
                //step1 load the driver class  
                Class.forName("oracle.jdbc.driver.OracleDriver");  
                //step2 create  the connection object  
                Connection con=DriverManager.getConnection(  
                "jdbc:oracle:thin:@localhost:1521:xe","Hermi","root"); 
                //step3 create the statement object  
                Statement stmt=con.createStatement();  
                //step4 execute query  
              
                stmt.executeQuery("UPDATE score_sheet SET username = '"+ user_textField.getText() +"' WHERE user_no = "+ user_no_temp +" ");  
              
                con.close();  

            }catch(Exception e){ System.out.println(e);}  
            
            
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setRowCount(0);
            
            showData_Sheet();
            
            score_delete_Btn.setEnabled(true);
        }
    }   
     
     
    private void exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
            System.out.println("Application Closed");
            System.exit(0); // function to exit the game
    }//GEN-LAST:event_exit_btnActionPerformed
    
     private void hs_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
           
            user_txt.hide();
            Start_btn2.hide();
            exit_btn.hide();
            hs_btn1.hide();
            htp_btn.hide();
            BackgroundMain.hide();
            showData_Sheet();
            score_Panel.setVisible(true);
            
    }//GEN-LAST:event_exit_btnActionPerformed
    
    private void chika_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
         
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/choose_img.png")).getImage().getScaledInstance(995, 610, Image.SCALE_DEFAULT));
            choose_img.setIcon(imageIcon); // NOI18N
            start_game_btn.setEnabled(true);
            Character.choosen_char = "chika";
          
    }//GEN-LAST:event_exit_btnActionPerformed
    
    private void ishigami_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
          
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/ishigami_back.jpg")).getImage().getScaledInstance(995, 610, Image.SCALE_DEFAULT));
            choose_img.setIcon(imageIcon); // NOI18N
            start_game_btn.setEnabled(true);
            Character.choosen_char = "ish";
          
    }
        
    private void miyuki_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
            
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/miyuki_img.jpg")).getImage().getScaledInstance(995, 610, Image.SCALE_DEFAULT));
            choose_img.setIcon(imageIcon); // NOI18N
            start_game_btn.setEnabled(true);
            Character.choosen_char = "miy";
          
    }
    
    private void kaguya_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
          
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/shinomiya_img.jpg")).getImage().getScaledInstance(995, 610, Image.SCALE_DEFAULT));
            choose_img.setIcon(imageIcon); // NOI18N
            start_game_btn.setEnabled(true);
            Character.choosen_char = "shi";
          
    }

    private void Start_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
        
        if(user_txt.getText().isBlank() || user_placeholder.equals("Username"))
            JOptionPane.showMessageDialog(null, "Invalid Username must not be empty");
        else{

            user_txt.hide();
            Start_btn2.hide();
            exit_btn.hide();
            hs_btn1.hide();
            htp_btn.hide();
            BackgroundMain.hide();
            choose_Panel.setVisible(true);

            username = user_txt.getText();
        }

    }
    
    private void start_game_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
            
        a = new Frame();
        a.showFrame();
        dispose();

    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundMain;
    private javax.swing.JButton Start_btn2;
    private javax.swing.JButton exit_btn;
    private javax.swing.JButton hs_btn1;
    private javax.swing.JButton htp_btn;
    
    
    
    private javax.swing.JButton kaguya_button;
    private javax.swing.JButton chika_button;
    private javax.swing.JButton ishigami_button;
    private javax.swing.JButton miyuki_button;
    private javax.swing.JButton start_game_btn;
    private javax.swing.JButton score_saveBtn;
    private javax.swing.JButton score_editBtn;
    private javax.swing.JButton score_delete_Btn;
    private javax.swing.JButton score_back;
    private javax.swing.JButton panel_back;
    
    
    private javax.swing.JTextField user_txt;
    private javax.swing.JTextField score_textField;
    private javax.swing.JTextField user_textField;
    
    
    
    private javax.swing.JLabel choose_img;
    private javax.swing.JPanel choose_Panel;
    private javax.swing.JPanel score_Panel;                   
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel hs_img;
    
    private String user_no_temp;
    String user_placeholder = "Username";
    
   
    // End of variables declaration//GEN-END:variables
}
